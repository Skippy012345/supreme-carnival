Collin Here.
We ned to define how we name stuff, and how things interface. I'm going to make some declerations, and then we 
can go from there. 
* Angle Reporting
** Things that need angular input should take decimal degrees 
*** Because doing things in degrees, minutes, seconds is not a usual convention for us.
** Things that output angular information should output in decimal degrees
*** So there is no conversion stage necessary when that angular output needs to be input somewhere.
* Latitude/Longitude
** Both input and output should be in the form of a tuple (LAT,LON)
** Any variables that hold latitude or longitude info should be named LAT_... or LON_...
* Programming Conventions
** Compartmentalize things, people.
 More files is not a bad thing, and in fact can help with a lot of the integration problems we're about to have.
 





Classes:
	class.Telescope()
	- Instantiates a Telescope object as well as separate objects for the motors and encoders.
	- All public methods will be part of the telescope class, the other classes for the motors and encoders are mainly for compartmentalization and will ba handled through telescope().
	- Class variables:
		- (Motor) azMotor
		- (Motor) altMotor
		- (Encoder) azEncoder
		- (Encoder) altEncoder
		- (ndarray) targetAngle
	
	class.Motor()
	- Functionality to send the necessary signals to the controllers to rotate the motors by a precise amount.

	class.Encoder()
	- Functionality to interpret the I2C signal as an angular reading with respect to some reference angle.
	

Public Methods:
	telescope.getAngles(self, type=None)
	- Returns the current angular position of the telescope as read from the rotary encoders.
	- Parameters: 
		type: bool or {‘Az’, ‘Alt’} string, optional, default: None
		The desired type of angle to be returned; either the azimuthal angle, or altitudinal angle. Boolean values are 0 for azimuthal and 1 for altitudinal. If no type is given, the function will return the tuple (azAngle, altAngle).
	- Returns:
		out: tuple or float (might change it to an ndarray from numpy)
		The azimuthal and/or altitudinal angle of the telescope as read from the encoder(s).


	telescope.getAzAngle(self)
	- Calls telescope.getAngles(self, type=‘Az’)to return the azimuthal angle of the telescope as a float value.


	telescope.getAltAngle(self)
	- Calls telescope.getAngles(self, type=‘Alt’)to return the altitudinal angle of the telescope as a float value.